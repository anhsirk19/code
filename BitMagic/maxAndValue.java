package BitMagic;
//to find the maximum AND value generated by any pair of elements in the array.
public class maxAndValue {
    public static void main(String[] args) {
        int[] arr = {4, 8, 12, 16};
        System.out.println(answer(arr));
    }
    //naive
    //tc is o(N^2)
    static int answer(int[] arr){
        int ans = 0;
        for(int i = 0 ; i < arr.length - 1 ; i++){
            for(int j = i + 1 ; j < arr.length ; j++){
                ans = Math.max(ans, arr[i]&arr[j]);
            }
        }
        return ans;
    }

    //efficient method
    //tc is O(32*N)
    static int answer1(int[] arr){
        int res = 0, count;
        //iterate over total of 32 bits
        //from msb to lsb
        for(int bit = 31 ; bit >= 0 ; bit++){
            count = checkBit(res | (1 << bit), arr, arr.length);
            if(count >= 2){
                res |= (1 << bit);
            }
        }
        return res;
    }
    static int checkBit(int pattern, int arr[], int n){
        int count = 0;
        for(int i = 0 ; i < arr.length ; i++){
            if((arr[i] & pattern) == pattern){
                count++;
            }
        }
        return count;
    }
}
